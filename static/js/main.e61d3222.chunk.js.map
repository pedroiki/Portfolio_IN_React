{"version":3,"sources":["logo.svg","components/Photo.js","components/Title.js","components/Counter.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Photo","src","React","Component","Title","this","props","title","Counter","increment","setState","counter","state","decrement","onClick","Nav","className","href","target","App","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sJAAAA,EAAOC,QAAU,IAA0B,kC,uJCY5BC,G,6LAPP,OACI,yBAAKC,IAAI,qF,GAJDC,IAAMC,YCWXC,E,iLARP,OACI,4BACKC,KAAKC,MAAMC,W,GALRL,IAAMC,WCuCXK,E,YAtCX,WAAYF,GAAO,IAAD,8BACd,4CAAMA,KAOVG,UAAU,WACN,EAAKC,SACD,CACIC,QAAS,EAAKC,MAAMD,QAAS,KAXvB,EAgBlBE,UAAU,WACN,EAAKH,SACD,CACIC,QAAS,EAAKC,MAAMD,QAAS,KAjBrC,EAAKC,MAAM,CACPD,QAAQ,GAHE,E,sEAyBd,OAEI,6BACI,6BACKN,KAAKO,MAAMD,SAEhB,4BAAQG,QAAST,KAAKI,WAAtB,KACA,4BAAQK,QAAST,KAAKQ,WAAtB,U,GAjCMX,IAAMC,WC+BbY,G,uLA5BP,OAII,wBAAIC,UAAU,cACV,wBAAIA,UAAU,aACZ,uBAAGA,UAAU,OAAOC,KAAK,+CAA+CC,OAAO,UAA/E,SAEF,wBAAIF,UAAU,aACZ,uBAAGA,UAAU,OAAQC,KAAK,4DAA4DC,OAAO,UAA7F,cAEF,wBAAIF,UAAU,aACZ,uBAAGA,UAAU,OAAOC,KAAK,kFAAiFC,OAAO,UAAjH,gC,GAfAhB,IAAMC,YCkCTgB,E,iLA1BT,OACE,yBAAKH,UAAU,OAEb,4BAAQA,UAAU,eAGhB,kBAAC,EAAD,CAAOT,MAAO,2BAAd,MACA,kBAAC,EAAD,UACA,kBAAC,EAAD,CAAOA,MAAO,oCAAd,MACA,kBAAC,EAAD,WACA,kBAAC,EAAD,MAEA,uBACES,UAAU,WACVC,KAAK,8BACLC,OAAO,SACPE,IAAI,uBAJN,kB,GAdMlB,IAAMC,WCIJkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e61d3222.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\" \r\n\r\nclass Photo extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <img src=\"https://www.freepngimg.com/thumb/iron_man/2-2-iron-man-png-clipart-thumb.png\"></img>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Photo","import React from \"react\"\r\n\r\nclass Title extends React.Component {\r\n\r\n    render (){\r\n        return (      \r\n            <h1>\r\n                {this.props.title}\r\n            </h1>\r\n        )\r\n\r\n    }\r\n}\r\nexport default Title ","import React from \"react\"\r\n\r\nclass Counter extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            counter:0\r\n\r\n        }\r\n\r\n    }\r\n    increment=() =>{\r\n        this.setState(\r\n            {\r\n                counter: this.state.counter +1\r\n            }\r\n        )\r\n    }\r\n\r\n    decrement=() =>{\r\n        this.setState(\r\n            {\r\n                counter: this.state.counter -1\r\n            }\r\n        )\r\n    }\r\n\r\n    render (){\r\n        return(\r\n        \r\n            <div> \r\n                <div>\r\n                    {this.state.counter}     \r\n                </div>\r\n                <button onClick={this.increment}>+</button>\r\n                <button onClick={this.decrement}>-</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter","import React from \"react\" \r\nimport \"./Nav.css\" \r\nclass Nav extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          \r\n        \r\n\r\n            <ul className=\"links-list\">\r\n                <li className=\"list-item\" >\r\n                  <a className=\"link\" href=\"https://pedroiki.github.io/portfolio-cgomes/\" target=\"_blank\">Home</a>\r\n                </li >\r\n                <li className=\"list-item\">\r\n                  <a className=\"link\"  href=\"https://pedroiki.github.io/portfolio-cgomes/#My-Portfolio\" target=\"_blank\">Portfolio</a>\r\n                </li>\r\n                <li className=\"list-item\">\r\n                  <a className=\"link\" href=\"https://api.whatsapp.com/send?phone=351919214504&text=Ol%c3%a1%21&source=&data=\"target=\"_blank\"\r\n                   >Contact me on Whatsapp\r\n                  \r\n                  </a>\r\n                </li>\r\n             \r\n            </ul>\r\n          \r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Nav","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Photo from \"./components/Photo.js\";\nimport Title from \"./components/Title.js\"; \nimport Counter from \"./components/Counter.js\";\nimport Nav from \"./components/Nav.js\";\n\nclass App extends React.Component { \n    render(){\n      return (\n        <div className=\"App\">    \n        {/* //isto quer dizer que tem uma class \"app\" nos estilos */}\n          <header className=\"App-header\">\n          </header>\n            \n            <Title title={\"My 1ft react Experience\"}>  </Title>\n            <Nav> </Nav>\n            <Title title={\"my React skills are on progress \"}>  </Title>\n            <Counter>  </Counter>\n            <Photo></Photo>\n\n            <a\n              className=\"App-link\"\n              href=\"https://github.com/pedroiki\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              My GitHub\n            </a>\n          \n        </div>\n      );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}